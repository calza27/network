---
AWSTemplateFormatVersion: 2010-09-09
Description: pricing network resources

Parameters:
  cidr:
    Type: String
    Description: VPC's CIDR

  privateSubnetCidr:
    Description: Private subnet cidr range
    Type: String

  publicSubnetCidr:
    Description: Public subnet cidr range
    Type: String

Resources:
  vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref cidr
      InstanceTenancy: default
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-igw'
  
  vpcIgwAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref igw
      VpcId: !Ref vpc

  privateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc
      Tags:
        - Key: Name
          Value: !Sub 'private-${AWS::StackName}-subnet-rt'

  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      VpcId: !Ref vpc
      CidrBlock: !Ref privateSubnetCidr
      Tags:
        - Key: Name
          Value: !Sub 'private-${AWS::StackName}-subnet'

  privateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privateSubnet
      RouteTableId: !Ref privateRouteTable

  publicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc
      Tags:
        - Key: Name
          Value: !Sub 'public-${AWS::StackName}-subnet-rt'

  publicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      VpcId: !Ref vpc
      CidrBlock: !Ref publicSubnetCidr
      Tags:
        - Key: Name
          Value: !Sub 'public-${AWS::StackName}-subnet'

  publicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet
      RouteTableId: !Ref publicRouteTable

  NATGatewayEIP:
   Type: AWS::EC2::EIP
   Properties:
      Domain: vpc

  NATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref publicSubnet

  publicSubnetIgwRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref publicRouteTable
      GatewayId: !Ref igw

  privateSubnetNatRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref privateRouteTable
      NatGatewayId: !Ref NATGateway

  privateSubnetNacl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref vpc
      Tags:
        - Key: Name
          Value: !Sub 'private-${AWS::StackName}-subnet-nacl'

  privateSubnetNaclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref privateSubnet
      NetworkAclId: !Ref privateSubnetNacl

  privateIngressFromInetEph:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref privateSubnetNacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 1024
        To: 65535

  privateEgressFromInet:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      Egress: true
      NetworkAclId: !Ref privateSubnetNacl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 443
        To: 443

  vpcFlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365

  vpcFlowLogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: vpc-flow-logs.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: flowlog-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: !GetAtt vpcFlowLogGroup.Arn

  vpcFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt vpcFlowLogRole.Arn
      LogGroupName: !Ref vpcFlowLogGroup
      ResourceId: !Ref vpc
      ResourceType: VPC
      TrafficType: ALL

  paramVpcID:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /network/vpc-id
      Type: String
      Value: !Ref vpc

  paramPrivateSubnet:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /network/private-subnet
      Type: String
      Value: !Ref privateSubnet

  paramPublicSubnet:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /network/public-subnet
      Type: String
      Value: !Ref publicSubnet

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for vpc endpoints
      VpcId: !Ref vpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref cidr
          Description: Allow all traffic on port 443 from the VPC
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: Allow all traffic on port 443